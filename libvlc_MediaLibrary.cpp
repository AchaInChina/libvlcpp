/*****************************************************************************
 * libvlc_MediaLibrary.cpp: MediaLibrary implementation
 *****************************************************************************
 * Copyright Â© 2014 the VideoLAN team
 *
 * Authors: Alexey Sokolov <alexey@alexeysokolov.co.cc>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 *****************************************************************************/

/* This file is autogenerated */


#include <vlc.hpp>

namespace VLC {


MediaLibrary::MediaLibrary(libvlc_media_library_t* obj) 
{
    if (!obj) 
    {
        throw Exception("Can't construct MediaLibrary");
    }
    m_obj = obj;
}

MediaLibrary::MediaLibrary(const MediaLibrary& another) 
{
    m_obj = another.m_obj;
    retain();
}

const MediaLibrary& MediaLibrary::operator=(const MediaLibrary& another) 
{
    if (this == &another) 
    {
        return *this;
    }
    release();
    m_obj = another.m_obj;
    retain();
    return *this;
}

bool MediaLibrary::operator==(const MediaLibrary& another) const 
{
    return m_obj == another.m_obj;
}

MediaLibrary::~MediaLibrary() 
{
    release();
}


MediaLibrary::MediaLibrary(Instance & p_instance) 
{
    m_obj = libvlc_media_library_new(p_instance.get_c_object());
    if (!m_obj) 
    {
        throw Exception("Can't construct MediaLibrary");
    }
}

int MediaLibrary::load() 
{
    int c_result = libvlc_media_library_load(m_obj);
    int result = c_result;
    return result;
}

void MediaLibrary::release() 
{
    libvlc_media_library_release(m_obj);
}

void MediaLibrary::retain() 
{
    libvlc_media_library_retain(m_obj);
}

} // namespace VLC

